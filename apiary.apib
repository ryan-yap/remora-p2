FORMAT: 1A
HOST: http://www.polaride.com/

# Polaride

A car polling application

## User [/mobile/user]

### √ Login [POST]

The user will be created if does not exist in the system. 
The same client_id and email is returned with a session cookie if successful.
If unsuccessful, may retry with PUT request with additional phoneNumber input field.

+ Request (application/json)

        {
            "loginMethod": "facebook",
            "userId": "user_id",
            "userToken": "user_token"
        }

+ Response 200 (application/json)

    + Headers
    
            set-cookie: polarride=session_cookie; Secure;

    + Body

            {
                "userId": "user_id",
                "email": "daniel@polaride.com",
                "session": true
            }
            
+ Response 401 (application/json)

    + Headers
    
            Set-Cookie: polarride=null; Secure;

    + Body

            {
                "userId": "user_id",
                "session": false
            }

### √ Register [PUT]

If a user logs in and does not yet have an account, use this request and include the phone number.

+ Request (application/json)

        {
            "loginMethod": "facebook",
            "userId": "user_id",
            "userToken": "user_token",
            "phoneNumber": "1234561234"
        }

+ Response 200 (application/json)

    + Headers
    
            set-cookie: polarride=session_cookie; Secure;

    + Body

            {
                "userId": "user_id",
                "email": "daniel@polaride.com",
                "session": true
            }
            
+ Response 401 (application/json)

    + Headers
    
            Set-Cookie: polarride=null; Secure;

    + Body

            {
                "userId": "user_id",
                "session": false
            }

### √ Logout [DELETE]

Session is destroyed on logout.

+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: polarride=null; Secure;
            
    + Body

            {
                "clientId": "client_id"
                "session": false
            }

### √ Check Session [GET]

Check if the session is open with polaride server. A closed session requires login.

+ Response 200 (application/json)

        {
            "session": false
        }
        
## Schedule [/schedule]

### √ Get My Rides [GET /schedule/rides/{:id}]
        
+ Response 200 (application/json)

        {
            "_id": "MongoID"
            "passengerID": "54321",
            "driverID": "12345",
            "type": "request",
            "seats": 1,
            "time": 1470728906.856591,
            "flexibility": {
                "early": 1470728906.856591,
                "late": 1470728906.856591
            },
            "origin": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "destination": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "fare": {
                "passenger": 3.90,
                "driver": 3.22
            }
        }
        
### Get My Offers [GET /schedule/offers/{:id}]
        
+ Response 200 (application/json)

        {
            "_id": "MongoID",
            "driverID": "12345",
            "type": "offer",
            "request": ["requestID_1", "requestID_2"],
            "seats": 1,
            "time": 1470728906.856591,
            "flexibility": {
                "early": 1470728906.856591,
                "late": 1470728906.856591
            },
            "origin": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "destination": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "fare": {
                "passenger": 3.90,
                "driver": 3.22
            }
        }

### √ Make a Ride Request [POST /schedule/rides]

+ Request (application/json)

        {
            "passengerID": "54321",
            "type": "request",
            "seats": 1,
            "time": 1470728906.856591,
            "flexibility": {
                "early": 1470728906.856591,
                "late": 1470728906.856591
            },
            "origin": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "destination": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "fare": {
                "passenger": 3.90,
                "driver": 3.22
            }
        }

+ Response 200 (application/json)

        {
            "userId": "user_id",
            "status": "requested"
        }

### √ Make a Ride Offer [POST /schedule/offers]

+ Request (application/json)

        {
            "driverID": "12345",
            "type": "offer",
            "seats": 4,
            "time": 1470728906.856591,
            "flexibility": {
                "early": 1470728906.856591,
                "late": 1470728906.856591
            },
            "origin": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            },
            "destination": {
                "latitude": 49.28239320918291,
                "longtitude": -123.1185486540198
            }
        }

+ Response 200 (application/json)

        {
            "userId": "user_id",
            "status": "offered"
        }